---
title: "STAT 206 Final Project MLR"
author: "Axel Galicia Lona, Linlin Liu, amd Nancy Lopez"
date: "2024-12-13"
echo: true
format:
  html:
    toc: true
    toc-location: left
    embed-resources: true
    code-line-numbers: true
  pdf:
    code-line-numbers: true
---

\newpage
\tableofcontents
\newpage
\listoffigures
\newpage
\listoftables
\newpage

# Introduction

## Background and Motivation

Movies are a visual art form that simulates and communicates thoughts, actions,
ideas, and realities by combining camera recordings with sound. With rapid
population expansion and technical improvement, the movie industry grows
increasingly sophisticated. The industry's maturity has also boosted the rate
at which movies are made and produced, and every year, a new batch of films is  released in theaters. Therefore, studios, producers, and investors need
reliable predictions to make informed decisions about budgeting, marketing,
and resource allocation.

As viewers, we are also interested in the factors that contribute to a film's
revenue, because these generally define its success. Furthermore, the highly competitive nature of the film industry, as well as the huge economic impact of
movie income, motivated us to pursue this project. With abundant data available
on various aspects of movies, including budget, cast, genre, release dates, and
social media buzz, applying statistical models becomes a valuable tool for
analysis. Thus, we chose to build a multilinear regression model for our
project.

Differential privacy is crucial for datasets containing sensitive aspects of
movies, such as budget, revenue, cast, and others, as it ensures that
individual data points cannot be traced back to their sources. For instance, protecting details like a movie's budget prevents competitors from exploiting financial strategies, while preserving anonymity in user-related data
safeguards privacy rights. By adding controlled random noise to the data,
differential privacy balances utility with confidentiality, enabling meaningful analysis without exposing proprietary or personal information.

## Objectives

This project aims to deepen the understanding of how different factors may
impact a movie’s revenue and to what degree they will influence the box office.
In other words, we aim to determine whether the data provides sufficient
evidence to indicate that these variables contribute information for the
prediction of a movie’s revenue. If so, we seek to identify which variables
contribute the most to accurate predictions. Moreover, we would like to explore
the possibility of protecting sensitive information in the data set by adding a controlled amount of random noise using differential privacy.

These will be achieved by analyzing the data set *movies.csv*, which samples
various components of a movie, including genre, release date, budget,
production company, and cast, from 722,463 movies.

## Hypotheses

Based on the information provided by the data set, we propose the following hypotheses:

1. Different attributes of a feature movie significantly impacts its revenue.

2. A movie’s budget and genre contribute more significantly than others.

# Data Cleaning

Having an original data set of 722,463 observations and 20 variables would make
it rather difficult for us to build a model and increase the model complexity,
so we first decided to eliminate 12 variables as the first step of our data
cleaning process.

Next, we further cleaned the data set by completing the following:

* Omitted all NA's and 0's

* Chose movies with revenue and budget greater than or equal to $10,000

* Chose movies with run time greater than or equal to 40 minutes

* Chose movies with vote count greater than or equal to 95

* Chose movies with vote average greater than 0

The above left us with a data set of 6,804 observations and 8 variables.
However, due to the concern that having too many categories in our chosen
categorical variables, we decided to chose the top two categories for each. We
also divided all variables with unites in dollars by 1,000 for to facilitate
analysis. At the end, we obtained a total of 2,624 observations and 8 variables
as the final data set.

**NOTE:** For the code, please refer to the "Data Cleaning" section in the
Appendix.

# Data Description

For the model building process, we will now be working with the following
variables:

- *genres*: genre of the movie

- *original language*: the language in which the movie was first released

- *popularity*: the amount of times a movie’s page has been visited according
to TMDB metric

- *budget*: the total projected costs of making a movie

- *runtime*: duration of the movie

- *vote average*: average of votes given by TMDB users

- *vote count*: total number of TMDB votes a movie received

- *revenue*: the amount of money a movie raised by ticket sales, output target

\begin{table}[h]
\begin{center}
\begin{tabular}{|c|c|c|c|c|c|}
\hline 
Variable & Unit & Type & Min & Max & SD\\
\hline 
genres & Drama or Comedy & cat predictor & - & - & -\\
\hline 
original language & en or fr & cat predictor & - & - & -\\
\hline
popularity & - & num cont predictor & 0.82 & 3,994.34 & 86.44\\
\hline 
budget & thousand dollars & num cont predictor & 12.00 & 20,000.00 & 23,242.17\\
\hline
runtime & minutes & num cont predictor & 62 & 254 & 20.05\\
\hline
vote average & - & num disc predictor & 3.30 & 8.71 & 0.76\\
\hline
vote count & - & num disc predictor & 95 & 31,145 & 2,543.94\\
\hline
revenue & thousand dollars & num cont response & 10.16 & 2,187,464.00 & 101,669.80\\
\hline
\end{tabular}
\end{center}
\caption{Data Summary Statistics}
\end{table}

**NOTE:** The above variables are the ones found in the original data set. If necessary, we will transform or eliminate variables during model building to
facilitate the process. For more details, please refer to the "Model Building
and Diagnostics" section in the Appendix.

\newpage

# Appendix

## Data Cleaning

```{r, message=FALSE,warning=FALSE, include=FALSE}
library(tidyverse)
library(lubridate)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(GGally)
library(car)
library(mltools)
library(data.table)
library(fastDummies)
library(lmtest)
library(tidyr)
library(grid)
library(scales)
library(forcats)

original <- read.csv(file.choose(), header = T)
```

```{r, message=FALSE, warning=FALSE}
# subset data
sub1 <- subset(original, select = c("genres", "original_language",
                                    "popularity","budget","revenue",
                                    "runtime","vote_average", "vote_count"))


# replace all empty cells and 0's with NA
sub1[sub1 == ""] = NA
sub1[sub1 == 0] = NA

# clean the data with selected restrictions
sub2 <- sub1 %>%
  na.omit() %>%
  filter(revenue >= 10000) %>%
  filter(budget >= 10000) %>%
  filter(runtime >= 40) %>%
  filter(vote_count >= 95) %>%
  filter(vote_average > 0) 

# split genres and find the top 2 genres
genre <- strsplit(sub2$genres, "-")
sub2$genres <- as.character(lapply(genre, function(x) x[1]))
genre_freq <- table(sub2$genres)
genre_rank <- sort(genre_freq,decreasing = T)
genre_rank[1:2]

# find the top 2 original languages
lang_freq <- table(sub2$original_language)
lang_rank <- sort(lang_freq, decreasing = T)
lang_rank[1:2]

# subset again using only the top 2 genres and the top 2 original languages
# this is the final data set to be used for model building
sub3 <- sub2 %>%
  filter(genres == "Drama" | genres == "Comedy") %>%
  filter(original_language == "en" | original_language == "fr")

# divide revenue and budget by 1000 for easier calculations and visualization
sub3$budget <- as.numeric(as.character(sub3$budget)) / 1000
sub3$revenue <- as.numeric(as.character(sub3$revenue)) / 1000
```

## EDA

```{r fig.cap="Histogram of Response Variable", message=FALSE, warning=FALSE}

# we need to check normality of the y values before any analysis

ggplot(sub3, aes(x = revenue)) +
  geom_histogram(fill = "darkblue", color = "white") +
  labs(x = "revenue (in thousand dollars)", y = "count")
```
```{r fig.cap="Histograms and Barplots of Predictor Variables", message=FALSE, warning=FALSE}

# analzyze the predictor variables

g1 <-ggplot(sub3, aes(x = genres)) + 
  geom_bar(fill = "darkblue", color = "white")
g2 <-ggplot(sub3, aes(x = original_language)) + 
  geom_bar(fill = "darkblue", color = "white")
g3 <-ggplot(sub3, aes(x = popularity)) +
  geom_histogram(fill = "darkblue", color = "white", binwidth = 50)
g4 <-ggplot(sub3, aes(x = budget)) + 
  geom_histogram(fill = "darkblue", color = "white")
g5 <-ggplot(sub3, aes(x = runtime)) + 
  geom_histogram(fill = "darkblue", color = "white")
g6 <-ggplot(sub3, aes(x = vote_average)) + 
  geom_histogram(fill = "darkblue", color = "white")
g7<-ggplot(sub3, aes(x = vote_count)) + 
  geom_histogram(fill = "darkblue", color = "white")

grid.arrange(g1, g2, g3, g4, g5, g6, g7, ncol = 2)

```
```{r fig.cap="Predictor vs. Response", message=FALSE, warning=FALSE}

# create scatter plots between each quantitative predictor var and the response var to see their relationships

s.popularity <- ggplot(sub3, aes(x = popularity, y = revenue)) +
  geom_point(color = "darkblue") 
s.budget <- ggplot(sub3, aes(x = budget, y = revenue)) +
  geom_point(color = "darkblue") 
s.runtime <- ggplot(sub3, aes(x = runtime, y = revenue)) +
  geom_point(color = "darkblue") 
s.vote_average <- ggplot(sub3, aes(x = vote_average, y = revenue)) +
  geom_point(color = "darkblue") 
s.vote_count <- ggplot(sub3, aes(x = vote_count, y = revenue)) +
  geom_point(color = "darkblue")

## create boxplots between each categorical predictor and the response

box.genres <- ggplot(sub3, aes(x = genres, y = revenue)) +
           geom_boxplot(color = "darkblue", outlier.color = "red",
                        outlier.shape = 4, outlier.size = 2) 
box.original_language <- ggplot(sub3, aes(x = original_language, y = revenue)) +
              geom_boxplot(color = "darkblue", outlier.color = "red",
                           outlier.shape = 4, outlier.size = 2) 

# divide the frame in grid using grid.arrange() and put above plots in it

grid.arrange(s.popularity, s.budget, s.runtime, s.vote_average, s.vote_count,
             box.genres, box.original_language, ncol = 4, nrow = 2)

```
```{r fig.cap="Initial Pairwise Comparison", message=FALSE, warning=FALSE}

# correlation between variables 

ggpairs(sub3) + theme(axis.text.x = element_text(size= 2, angle = 90),
                      axis.text.y = element_text(size = 2),
                      strip.text.y = element_text(angle = 0))

```

